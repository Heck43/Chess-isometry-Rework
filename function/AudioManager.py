import pygame
import os
import random
import sys

class AudioManager:
    
    def __init__(self, m):
        pygame.mixer.init()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        self.music_volume = m.config.get('music_volume', 0.5)
        self.sfx_volume = m.config.get('sfx_volume', 0.7)
        self.music_playing = False
        
        # –°–ø–∏—Å–æ–∫ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        self.music_files = []
        self.current_track_index = 0
        
        # –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        self.sfx_sounds = {}
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º—É–∑—ã–∫—É –∏ –∑–≤—É–∫–∏
        self.load_music()
        self.load_sfx()
        
    def get_resource_path(self, relative_path):
        """–ü–æ–ª—É—á–∏—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ä–µ—Å—É—Ä—Å—É, —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Ç–∞–∫ –∏ –≤ PyInstaller"""
        if hasattr(sys, '_MEIPASS'):
            # –ó–∞–ø—É—â–µ–Ω–æ –∏–∑ PyInstaller
            return os.path.join(sys._MEIPASS, relative_path)
        else:
            # –ó–∞–ø—É—â–µ–Ω–æ –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
            return relative_path
        
    def load_music(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ data/audio/"""
        audio_dir = self.get_resource_path("data/audio/")
        if not os.path.exists(audio_dir):
            return
            
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        supported_formats = ['.ogg', '.mp3', '.wav']
        
        # –ò—â–µ–º –≤—Å–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        for file in os.listdir(audio_dir):
            if any(file.lower().endswith(fmt) for fmt in supported_formats):
                full_path = os.path.join(audio_dir, file)
                self.music_files.append(full_path)
        
        if self.music_files:
            # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
            random.shuffle(self.music_files)
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(self.music_files)} –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
            self.start_music()
        else:
            print("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    def start_music(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ç—Ä–µ–∫"""
        if not self.music_files:
            return
            
        try:
            current_track = self.music_files[self.current_track_index]
            pygame.mixer.music.load(current_track)
            pygame.mixer.music.set_volume(self.music_volume)
            pygame.mixer.music.play()  # –ò–≥—Ä–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–∫–ª—é—á–∏–º—Å—è
            self.music_playing = True
            
            # –í—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞
            track_name = os.path.basename(current_track)
            print(f"‚ô™ –ò–≥—Ä–∞–µ—Ç: {track_name}")
            
        except pygame.error as e:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏: {e}")
            self.next_track()  # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫
    
    def stop_music(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º—É–∑—ã–∫—É"""
        pygame.mixer.music.stop()
        self.music_playing = False
    
    def set_music_volume(self, volume):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏ (0.0 - 1.0)"""
        self.music_volume = max(0.0, min(1.0, volume))
        pygame.mixer.music.set_volume(self.music_volume)
    
    def set_sfx_volume(self, volume):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤"""
        self.sfx_volume = max(0.0, min(1.0, volume))
    
    def next_track(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫"""
        if not self.music_files:
            return
            
        self.current_track_index = (self.current_track_index + 1) % len(self.music_files)
        if self.music_playing:
            self.start_music()
    
    def previous_track(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫"""
        if not self.music_files:
            return
            
        self.current_track_index = (self.current_track_index - 1) % len(self.music_files)
        if self.music_playing:
            self.start_music()
    
    def shuffle_playlist(self):
        """–ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç"""
        if self.music_files:
            current_track = self.music_files[self.current_track_index]
            random.shuffle(self.music_files)
            # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –≤ –Ω–æ–≤–æ–º –ø–æ—Ä—è–¥–∫–µ
            try:
                self.current_track_index = self.music_files.index(current_track)
            except ValueError:
                self.current_track_index = 0
    
    def update(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º—É–∑—ã–∫–∏ (–≤—ã–∑—ã–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ)"""
        if self.music_playing and not pygame.mixer.music.get_busy():
            # –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π
            self.next_track()
    
    def get_current_track_name(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞"""
        if self.music_files and self.current_track_index < len(self.music_files):
            return os.path.basename(self.music_files[self.current_track_index])
        return "No music"
    
    def load_sfx(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏–∑ –ø–∞–ø–∫–∏ data/sfx/"""
        sfx_dir = self.get_resource_path("data/sfx/")
        if not os.path.exists(sfx_dir):
            print("–ü–∞–ø–∫–∞ –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è SFX
        supported_formats = ['.wav', '.ogg', '.mp3']
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–≤—É–∫–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        for file in os.listdir(sfx_dir):
            if any(file.lower().endswith(fmt) for fmt in supported_formats):
                file_path = os.path.join(sfx_dir, file)
                try:
                    sound = pygame.mixer.Sound(file_path)
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–∞–∫ –∫–ª—é—á
                    sound_name = os.path.splitext(file)[0].lower()
                    self.sfx_sounds[sound_name] = sound
                    print(f"üîä –ó–∞–≥—Ä—É–∂–µ–Ω –∑–≤—É–∫: {sound_name}")
                except pygame.error as e:
                    print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–≤—É–∫–∞ {file}: {e}")
        
        if self.sfx_sounds:
            print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.sfx_sounds)} –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤")
        else:
            print("–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    def play_sfx(self, sound_name):
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç"""
        if sound_name.lower() in self.sfx_sounds:
            try:
                sound = self.sfx_sounds[sound_name.lower()]
                sound.set_volume(self.sfx_volume)
                sound.play()
            except pygame.error as e:
                print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ {sound_name}: {e}")
        else:
            print(f"–ó–≤—É–∫ '{sound_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
